{"ast":null,"code":"import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase } from \"../Utils/CanvasUtils\";\nimport { deepExtend, isSsr } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n  var _a;\n  const newValue = newFactor[key];\n  if (newValue !== undefined) {\n    factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n  }\n}\nexport class Canvas {\n  constructor(container) {\n    this.container = container;\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this._context = null;\n    this._generated = false;\n    this._preDrawUpdaters = [];\n    this._postDrawUpdaters = [];\n    this._resizePlugins = [];\n    this._colorPlugins = [];\n    this._mutationObserver = !isSsr() && typeof MutationObserver !== \"undefined\" ? new MutationObserver(records => {\n      for (const record of records) {\n        if (record.type === \"attributes\" && record.attributeName === \"style\") {\n          this._repairStyle();\n        }\n      }\n    }) : undefined;\n  }\n  get _fullScreen() {\n    return this.container.actualOptions.fullScreen.enable;\n  }\n  clear() {\n    const options = this.container.actualOptions,\n      trail = options.particles.move.trail;\n    if (options.backgroundMask.enable) {\n      this.paint();\n    } else if (trail.enable && trail.length > 0 && this._trailFillColor) {\n      this._paintBase(getStyleFromRgb(this._trailFillColor, 1 / trail.length));\n    } else {\n      this.draw(ctx => {\n        clear(ctx, this.size);\n      });\n    }\n  }\n  destroy() {\n    var _a, _b;\n    (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n    if (this._generated) {\n      (_b = this.element) === null || _b === void 0 ? void 0 : _b.remove();\n    } else {\n      this._resetOriginalStyle();\n    }\n    this.draw(ctx => {\n      clear(ctx, this.size);\n    });\n    this._preDrawUpdaters = [];\n    this._postDrawUpdaters = [];\n    this._resizePlugins = [];\n    this._colorPlugins = [];\n  }\n  draw(cb) {\n    if (!this._context) {\n      return;\n    }\n    return cb(this._context);\n  }\n  drawParticle(particle, delta) {\n    var _a;\n    if (particle.spawning || particle.destroyed) {\n      return;\n    }\n    const radius = particle.getRadius();\n    if (radius <= 0) {\n      return;\n    }\n    const pfColor = particle.getFillColor(),\n      psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n    let [fColor, sColor] = this._getPluginParticleColors(particle);\n    if (!fColor) {\n      fColor = pfColor;\n    }\n    if (!sColor) {\n      sColor = psColor;\n    }\n    if (!fColor && !sColor) {\n      return;\n    }\n    this.draw(ctx => {\n      var _a, _b, _c, _d;\n      const options = this.container.actualOptions,\n        zIndexOptions = particle.options.zIndex,\n        zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate,\n        opacity = (_c = (_a = particle.bubble.opacity) !== null && _a !== void 0 ? _a : (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1,\n        strokeOpacity = (_d = particle.strokeOpacity) !== null && _d !== void 0 ? _d : opacity,\n        zOpacity = opacity * zOpacityFactor,\n        zStrokeOpacity = strokeOpacity * zOpacityFactor,\n        transform = {},\n        colorStyles = {\n          fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined\n        };\n      colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n      this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n      drawParticle({\n        container: this.container,\n        context: ctx,\n        particle,\n        delta,\n        colorStyles,\n        backgroundMask: options.backgroundMask.enable,\n        composite: options.backgroundMask.composite,\n        radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n        opacity: zOpacity,\n        shadow: particle.options.shadow,\n        transform\n      });\n      this._applyPostDrawUpdaters(particle);\n    });\n  }\n  drawParticlePlugin(plugin, particle, delta) {\n    this.draw(ctx => {\n      drawParticlePlugin(ctx, plugin, particle, delta);\n    });\n  }\n  drawPlugin(plugin, delta) {\n    this.draw(ctx => {\n      drawPlugin(ctx, plugin, delta);\n    });\n  }\n  init() {\n    var _a;\n    this.resize();\n    this._initStyle();\n    this._initCover();\n    this._initTrail();\n    this.initBackground();\n    if (this.element) {\n      (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.element, {\n        attributes: true\n      });\n    }\n    this.initUpdaters();\n    this.initPlugins();\n    this.paint();\n  }\n  initBackground() {\n    const options = this.container.actualOptions,\n      background = options.background,\n      element = this.element,\n      elementStyle = element === null || element === void 0 ? void 0 : element.style;\n    if (!elementStyle) {\n      return;\n    }\n    if (background.color) {\n      const color = rangeColorToRgb(background.color);\n      elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n    } else {\n      elementStyle.backgroundColor = \"\";\n    }\n    elementStyle.backgroundImage = background.image || \"\";\n    elementStyle.backgroundPosition = background.position || \"\";\n    elementStyle.backgroundRepeat = background.repeat || \"\";\n    elementStyle.backgroundSize = background.size || \"\";\n  }\n  initPlugins() {\n    this._resizePlugins = [];\n    for (const [, plugin] of this.container.plugins) {\n      if (plugin.resize) {\n        this._resizePlugins.push(plugin);\n      }\n      if (plugin.particleFillColor || plugin.particleStrokeColor) {\n        this._colorPlugins.push(plugin);\n      }\n    }\n  }\n  initUpdaters() {\n    this._preDrawUpdaters = [];\n    this._postDrawUpdaters = [];\n    for (const updater of this.container.particles.updaters) {\n      if (updater.afterDraw) {\n        this._postDrawUpdaters.push(updater);\n      }\n      if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n        this._preDrawUpdaters.push(updater);\n      }\n    }\n  }\n  loadCanvas(canvas) {\n    var _a, _b;\n    if (this._generated) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n    this._generated = canvas.dataset && generatedAttribute in canvas.dataset ? canvas.dataset[generatedAttribute] === \"true\" : this._generated;\n    this.element = canvas;\n    this.element.ariaHidden = \"true\";\n    this._originalStyle = deepExtend({}, this.element.style);\n    this.size.height = canvas.offsetHeight;\n    this.size.width = canvas.offsetWidth;\n    this._context = this.element.getContext(\"2d\");\n    (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(this.element, {\n      attributes: true\n    });\n    this.container.retina.init();\n    this.initBackground();\n  }\n  paint() {\n    const options = this.container.actualOptions;\n    this.draw(ctx => {\n      if (options.backgroundMask.enable && options.backgroundMask.cover) {\n        clear(ctx, this.size);\n        this._paintBase(this._coverColorStyle);\n      } else {\n        this._paintBase();\n      }\n    });\n  }\n  resize() {\n    if (!this.element) {\n      return;\n    }\n    const container = this.container,\n      pxRatio = container.retina.pixelRatio,\n      size = container.canvas.size,\n      newSize = {\n        width: this.element.offsetWidth * pxRatio,\n        height: this.element.offsetHeight * pxRatio\n      };\n    if (newSize.height === size.height && newSize.width === size.width && newSize.height === this.element.height && newSize.width === this.element.width) {\n      return;\n    }\n    const oldSize = Object.assign({}, size);\n    this.element.width = size.width = this.element.offsetWidth * pxRatio;\n    this.element.height = size.height = this.element.offsetHeight * pxRatio;\n    if (this.container.started) {\n      this.resizeFactor = {\n        width: size.width / oldSize.width,\n        height: size.height / oldSize.height\n      };\n    }\n  }\n  async windowResize() {\n    if (!this.element) {\n      return;\n    }\n    this.resize();\n    const container = this.container,\n      needsRefresh = container.updateActualOptions();\n    container.particles.setDensity();\n    this._applyResizePlugins();\n    if (needsRefresh) {\n      await container.refresh();\n    }\n  }\n  _applyPostDrawUpdaters(particle) {\n    var _a;\n    for (const updater of this._postDrawUpdaters) {\n      (_a = updater.afterDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n    }\n  }\n  _applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform) {\n    var _a;\n    for (const updater of this._preDrawUpdaters) {\n      if (updater.getColorStyles) {\n        const {\n          fill,\n          stroke\n        } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n        if (fill) {\n          colorStyles.fill = fill;\n        }\n        if (stroke) {\n          colorStyles.stroke = stroke;\n        }\n      }\n      if (updater.getTransformValues) {\n        const updaterTransform = updater.getTransformValues(particle);\n        for (const key in updaterTransform) {\n          setTransformValue(transform, updaterTransform, key);\n        }\n      }\n      (_a = updater.beforeDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n    }\n  }\n  _applyResizePlugins() {\n    for (const plugin of this._resizePlugins) {\n      if (plugin.resize) {\n        plugin.resize();\n      }\n    }\n  }\n  _getPluginParticleColors(particle) {\n    let fColor, sColor;\n    for (const plugin of this._colorPlugins) {\n      if (!fColor && plugin.particleFillColor) {\n        fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n      }\n      if (!sColor && plugin.particleStrokeColor) {\n        sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n      }\n      if (fColor && sColor) {\n        break;\n      }\n    }\n    return [fColor, sColor];\n  }\n  _initCover() {\n    const options = this.container.actualOptions,\n      cover = options.backgroundMask.cover,\n      color = cover.color,\n      coverRgb = rangeColorToRgb(color);\n    if (coverRgb) {\n      const coverColor = {\n        r: coverRgb.r,\n        g: coverRgb.g,\n        b: coverRgb.b,\n        a: cover.opacity\n      };\n      this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n    }\n  }\n  _initStyle() {\n    const element = this.element,\n      options = this.container.actualOptions;\n    if (!element) {\n      return;\n    }\n    if (this._fullScreen) {\n      this._originalStyle = deepExtend({}, element.style);\n      this._setFullScreenStyle();\n    } else {\n      this._resetOriginalStyle();\n    }\n    for (const key in options.style) {\n      if (!key || !options.style) {\n        continue;\n      }\n      const value = options.style[key];\n      if (!value) {\n        continue;\n      }\n      element.style.setProperty(key, value, \"important\");\n    }\n  }\n  _initTrail() {\n    const options = this.container.actualOptions,\n      trail = options.particles.move.trail,\n      fillColor = rangeColorToRgb(trail.fillColor);\n    if (fillColor) {\n      const trail = options.particles.move.trail;\n      this._trailFillColor = Object.assign(Object.assign({}, fillColor), {\n        a: 1 / trail.length\n      });\n    }\n  }\n  _paintBase(baseColor) {\n    this.draw(ctx => {\n      paintBase(ctx, this.size, baseColor);\n    });\n  }\n  _repairStyle() {\n    var _a, _b;\n    const element = this.element;\n    if (!element) {\n      return;\n    }\n    (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n    this._initStyle();\n    this.initBackground();\n    (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(element, {\n      attributes: true\n    });\n  }\n  _resetOriginalStyle() {\n    const element = this.element,\n      originalStyle = this._originalStyle;\n    if (!(element && originalStyle)) {\n      return;\n    }\n    element.style.position = originalStyle.position;\n    element.style.zIndex = originalStyle.zIndex;\n    element.style.top = originalStyle.top;\n    element.style.left = originalStyle.left;\n    element.style.width = originalStyle.width;\n    element.style.height = originalStyle.height;\n  }\n  _setFullScreenStyle() {\n    const element = this.element;\n    if (!element) {\n      return;\n    }\n    const priority = \"important\";\n    element.style.setProperty(\"position\", \"fixed\", priority);\n    element.style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n    element.style.setProperty(\"top\", \"0\", priority);\n    element.style.setProperty(\"left\", \"0\", priority);\n    element.style.setProperty(\"width\", \"100%\", priority);\n    element.style.setProperty(\"height\", \"100%\", priority);\n  }\n}","map":{"version":3,"names":["clear","drawParticle","drawParticlePlugin","drawPlugin","paintBase","deepExtend","isSsr","getStyleFromHsl","getStyleFromRgb","rangeColorToHsl","rangeColorToRgb","generatedAttribute","setTransformValue","factor","newFactor","key","_a","newValue","undefined","Canvas","constructor","container","size","height","width","_context","_generated","_preDrawUpdaters","_postDrawUpdaters","_resizePlugins","_colorPlugins","_mutationObserver","MutationObserver","records","record","type","attributeName","_repairStyle","_fullScreen","actualOptions","fullScreen","enable","options","trail","particles","move","backgroundMask","paint","length","_trailFillColor","_paintBase","draw","ctx","destroy","_b","disconnect","element","remove","_resetOriginalStyle","cb","particle","delta","spawning","destroyed","radius","getRadius","pfColor","getFillColor","psColor","getStrokeColor","fColor","sColor","_getPluginParticleColors","_c","_d","zIndexOptions","zIndex","zOpacityFactor","zIndexFactor","opacityRate","opacity","bubble","value","strokeOpacity","zOpacity","zStrokeOpacity","transform","colorStyles","fill","stroke","_applyPreDrawUpdaters","context","composite","sizeRate","shadow","_applyPostDrawUpdaters","plugin","init","resize","_initStyle","_initCover","_initTrail","initBackground","observe","attributes","initUpdaters","initPlugins","background","elementStyle","style","color","backgroundColor","backgroundImage","image","backgroundPosition","position","backgroundRepeat","repeat","backgroundSize","plugins","push","particleFillColor","particleStrokeColor","updater","updaters","afterDraw","getColorStyles","getTransformValues","beforeDraw","loadCanvas","canvas","dataset","ariaHidden","_originalStyle","offsetHeight","offsetWidth","getContext","retina","cover","_coverColorStyle","pxRatio","pixelRatio","newSize","oldSize","Object","assign","started","resizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","_applyResizePlugins","refresh","call","updaterTransform","coverRgb","coverColor","r","g","b","a","_setFullScreenStyle","setProperty","fillColor","baseColor","originalStyle","top","left","priority","toString"],"sources":["C:/Users/Barbosa/Desktop/Pastas/Portifólio/portifolio/node_modules/tsparticles-engine/esm/Core/Canvas.js"],"sourcesContent":["import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase } from \"../Utils/CanvasUtils\";\nimport { deepExtend, isSsr } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    var _a;\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n        this._mutationObserver =\n            !isSsr() && typeof MutationObserver !== \"undefined\"\n                ? new MutationObserver((records) => {\n                    for (const record of records) {\n                        if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                            this._repairStyle();\n                        }\n                    }\n                })\n                : undefined;\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this._trailFillColor) {\n            this._paintBase(getStyleFromRgb(this._trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        var _a, _b;\n        (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        if (this._generated) {\n            (_b = this.element) === null || _b === void 0 ? void 0 : _b.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this.draw((ctx) => {\n            clear(ctx, this.size);\n        });\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        if (!this._context) {\n            return;\n        }\n        return cb(this._context);\n    }\n    drawParticle(particle, delta) {\n        var _a;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            var _a, _b, _c, _d;\n            const options = this.container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = (_c = (_a = particle.bubble.opacity) !== null && _a !== void 0 ? _a : (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1, strokeOpacity = (_d = particle.strokeOpacity) !== null && _d !== void 0 ? _d : opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container: this.container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            drawParticlePlugin(ctx, plugin, particle, delta);\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            drawPlugin(ctx, plugin, delta);\n        });\n    }\n    init() {\n        var _a;\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        this._initTrail();\n        this.initBackground();\n        if (this.element) {\n            (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.element, { attributes: true });\n        }\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element, elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        var _a, _b;\n        if (this._generated) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(this.element, { attributes: true });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return;\n        }\n        const oldSize = Object.assign({}, size);\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        this.resize();\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    _applyPostDrawUpdaters(particle) {\n        var _a;\n        for (const updater of this._postDrawUpdaters) {\n            (_a = updater.afterDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    _applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform) {\n        var _a;\n        for (const updater of this._preDrawUpdaters) {\n            if (updater.getColorStyles) {\n                const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                if (fill) {\n                    colorStyles.fill = fill;\n                }\n                if (stroke) {\n                    colorStyles.stroke = stroke;\n                }\n            }\n            if (updater.getTransformValues) {\n                const updaterTransform = updater.getTransformValues(particle);\n                for (const key in updaterTransform) {\n                    setTransformValue(transform, updaterTransform, key);\n                }\n            }\n            (_a = updater.beforeDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    _applyResizePlugins() {\n        for (const plugin of this._resizePlugins) {\n            if (plugin.resize) {\n                plugin.resize();\n            }\n        }\n    }\n    _getPluginParticleColors(particle) {\n        let fColor, sColor;\n        for (const plugin of this._colorPlugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    _initCover() {\n        const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n        if (coverRgb) {\n            const coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n            this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n        }\n    }\n    _initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        if (this._fullScreen) {\n            this._originalStyle = deepExtend({}, element.style);\n            this._setFullScreenStyle();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    _initTrail() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, fillColor = rangeColorToRgb(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this._trailFillColor = Object.assign(Object.assign({}, fillColor), { a: 1 / trail.length });\n        }\n    }\n    _paintBase(baseColor) {\n        this.draw((ctx) => {\n            paintBase(ctx, this.size, baseColor);\n        });\n    }\n    _repairStyle() {\n        var _a, _b;\n        const element = this.element;\n        if (!element) {\n            return;\n        }\n        (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        this._initStyle();\n        this.initBackground();\n        (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(element, { attributes: true });\n    }\n    _resetOriginalStyle() {\n        const element = this.element, originalStyle = this._originalStyle;\n        if (!(element && originalStyle)) {\n            return;\n        }\n        element.style.position = originalStyle.position;\n        element.style.zIndex = originalStyle.zIndex;\n        element.style.top = originalStyle.top;\n        element.style.left = originalStyle.left;\n        element.style.width = originalStyle.width;\n        element.style.height = originalStyle.height;\n    }\n    _setFullScreenStyle() {\n        const element = this.element;\n        if (!element) {\n            return;\n        }\n        const priority = \"important\";\n        element.style.setProperty(\"position\", \"fixed\", priority);\n        element.style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n        element.style.setProperty(\"top\", \"0\", priority);\n        element.style.setProperty(\"left\", \"0\", priority);\n        element.style.setProperty(\"width\", \"100%\", priority);\n        element.style.setProperty(\"height\", \"100%\", priority);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}