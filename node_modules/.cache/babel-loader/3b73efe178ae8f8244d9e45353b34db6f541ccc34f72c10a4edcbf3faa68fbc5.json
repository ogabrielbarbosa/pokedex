{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Barbosa/Desktop/Pastas/Portif\\xF3lio/portifolio/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Barbosa/Desktop/Pastas/Portif\\xF3lio/portifolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/Barbosa/Desktop/Pastas/Portif\\xF3lio/portifolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"C:/Users/Barbosa/Desktop/Pastas/Portif\\xF3lio/portifolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/Barbosa/Desktop/Pastas/Portif\\xF3lio/portifolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Barbosa/Desktop/Pastas/Portif\\xF3lio/portifolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { clear as _clear, drawParticle as _drawParticle, drawParticlePlugin as _drawParticlePlugin, drawPlugin as _drawPlugin, paintBase } from \"../Utils/CanvasUtils\";\nimport { deepExtend, isSsr } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n  var _a;\n  var newValue = newFactor[key];\n  if (newValue !== undefined) {\n    factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n  }\n}\nexport var Canvas = /*#__PURE__*/function () {\n  function Canvas(container) {\n    var _this = this;\n    _classCallCheck(this, Canvas);\n    this.container = container;\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this._context = null;\n    this._generated = false;\n    this._preDrawUpdaters = [];\n    this._postDrawUpdaters = [];\n    this._resizePlugins = [];\n    this._colorPlugins = [];\n    this._mutationObserver = !isSsr() && typeof MutationObserver !== \"undefined\" ? new MutationObserver(function (records) {\n      var _iterator = _createForOfIteratorHelper(records),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var record = _step.value;\n          if (record.type === \"attributes\" && record.attributeName === \"style\") {\n            _this._repairStyle();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }) : undefined;\n  }\n  _createClass(Canvas, [{\n    key: \"_fullScreen\",\n    get: function get() {\n      return this.container.actualOptions.fullScreen.enable;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this2 = this;\n      var options = this.container.actualOptions,\n        trail = options.particles.move.trail;\n      if (options.backgroundMask.enable) {\n        this.paint();\n      } else if (trail.enable && trail.length > 0 && this._trailFillColor) {\n        this._paintBase(getStyleFromRgb(this._trailFillColor, 1 / trail.length));\n      } else {\n        this.draw(function (ctx) {\n          _clear(ctx, _this2.size);\n        });\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this3 = this;\n      var _a, _b;\n      (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n      if (this._generated) {\n        (_b = this.element) === null || _b === void 0 ? void 0 : _b.remove();\n      } else {\n        this._resetOriginalStyle();\n      }\n      this.draw(function (ctx) {\n        _clear(ctx, _this3.size);\n      });\n      this._preDrawUpdaters = [];\n      this._postDrawUpdaters = [];\n      this._resizePlugins = [];\n      this._colorPlugins = [];\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(cb) {\n      if (!this._context) {\n        return;\n      }\n      return cb(this._context);\n    }\n  }, {\n    key: \"drawParticle\",\n    value: function drawParticle(particle, delta) {\n      var _this4 = this;\n      var _a;\n      if (particle.spawning || particle.destroyed) {\n        return;\n      }\n      var radius = particle.getRadius();\n      if (radius <= 0) {\n        return;\n      }\n      var pfColor = particle.getFillColor(),\n        psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n      var _this$_getPluginParti = this._getPluginParticleColors(particle),\n        _this$_getPluginParti2 = _slicedToArray(_this$_getPluginParti, 2),\n        fColor = _this$_getPluginParti2[0],\n        sColor = _this$_getPluginParti2[1];\n      if (!fColor) {\n        fColor = pfColor;\n      }\n      if (!sColor) {\n        sColor = psColor;\n      }\n      if (!fColor && !sColor) {\n        return;\n      }\n      this.draw(function (ctx) {\n        var _a, _b, _c, _d;\n        var options = _this4.container.actualOptions,\n          zIndexOptions = particle.options.zIndex,\n          zOpacityFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.opacityRate),\n          opacity = (_c = (_a = particle.bubble.opacity) !== null && _a !== void 0 ? _a : (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1,\n          strokeOpacity = (_d = particle.strokeOpacity) !== null && _d !== void 0 ? _d : opacity,\n          zOpacity = opacity * zOpacityFactor,\n          zStrokeOpacity = strokeOpacity * zOpacityFactor,\n          transform = {},\n          colorStyles = {\n            fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined\n          };\n        colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n        _this4._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n        _drawParticle({\n          container: _this4.container,\n          context: ctx,\n          particle: particle,\n          delta: delta,\n          colorStyles: colorStyles,\n          backgroundMask: options.backgroundMask.enable,\n          composite: options.backgroundMask.composite,\n          radius: radius * Math.pow(1 - particle.zIndexFactor, zIndexOptions.sizeRate),\n          opacity: zOpacity,\n          shadow: particle.options.shadow,\n          transform: transform\n        });\n        _this4._applyPostDrawUpdaters(particle);\n      });\n    }\n  }, {\n    key: \"drawParticlePlugin\",\n    value: function drawParticlePlugin(plugin, particle, delta) {\n      this.draw(function (ctx) {\n        _drawParticlePlugin(ctx, plugin, particle, delta);\n      });\n    }\n  }, {\n    key: \"drawPlugin\",\n    value: function drawPlugin(plugin, delta) {\n      this.draw(function (ctx) {\n        _drawPlugin(ctx, plugin, delta);\n      });\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _a;\n      this.resize();\n      this._initStyle();\n      this._initCover();\n      this._initTrail();\n      this.initBackground();\n      if (this.element) {\n        (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.element, {\n          attributes: true\n        });\n      }\n      this.initUpdaters();\n      this.initPlugins();\n      this.paint();\n    }\n  }, {\n    key: \"initBackground\",\n    value: function initBackground() {\n      var options = this.container.actualOptions,\n        background = options.background,\n        element = this.element,\n        elementStyle = element === null || element === void 0 ? void 0 : element.style;\n      if (!elementStyle) {\n        return;\n      }\n      if (background.color) {\n        var color = rangeColorToRgb(background.color);\n        elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n      } else {\n        elementStyle.backgroundColor = \"\";\n      }\n      elementStyle.backgroundImage = background.image || \"\";\n      elementStyle.backgroundPosition = background.position || \"\";\n      elementStyle.backgroundRepeat = background.repeat || \"\";\n      elementStyle.backgroundSize = background.size || \"\";\n    }\n  }, {\n    key: \"initPlugins\",\n    value: function initPlugins() {\n      this._resizePlugins = [];\n      var _iterator2 = _createForOfIteratorHelper(this.container.plugins),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _step2$value = _slicedToArray(_step2.value, 2),\n            plugin = _step2$value[1];\n          if (plugin.resize) {\n            this._resizePlugins.push(plugin);\n          }\n          if (plugin.particleFillColor || plugin.particleStrokeColor) {\n            this._colorPlugins.push(plugin);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"initUpdaters\",\n    value: function initUpdaters() {\n      this._preDrawUpdaters = [];\n      this._postDrawUpdaters = [];\n      var _iterator3 = _createForOfIteratorHelper(this.container.particles.updaters),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var updater = _step3.value;\n          if (updater.afterDraw) {\n            this._postDrawUpdaters.push(updater);\n          }\n          if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n            this._preDrawUpdaters.push(updater);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"loadCanvas\",\n    value: function loadCanvas(canvas) {\n      var _a, _b;\n      if (this._generated) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      }\n      this._generated = canvas.dataset && generatedAttribute in canvas.dataset ? canvas.dataset[generatedAttribute] === \"true\" : this._generated;\n      this.element = canvas;\n      this.element.ariaHidden = \"true\";\n      this._originalStyle = deepExtend({}, this.element.style);\n      this.size.height = canvas.offsetHeight;\n      this.size.width = canvas.offsetWidth;\n      this._context = this.element.getContext(\"2d\");\n      (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(this.element, {\n        attributes: true\n      });\n      this.container.retina.init();\n      this.initBackground();\n    }\n  }, {\n    key: \"paint\",\n    value: function paint() {\n      var _this5 = this;\n      var options = this.container.actualOptions;\n      this.draw(function (ctx) {\n        if (options.backgroundMask.enable && options.backgroundMask.cover) {\n          _clear(ctx, _this5.size);\n          _this5._paintBase(_this5._coverColorStyle);\n        } else {\n          _this5._paintBase();\n        }\n      });\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      if (!this.element) {\n        return;\n      }\n      var container = this.container,\n        pxRatio = container.retina.pixelRatio,\n        size = container.canvas.size,\n        newSize = {\n          width: this.element.offsetWidth * pxRatio,\n          height: this.element.offsetHeight * pxRatio\n        };\n      if (newSize.height === size.height && newSize.width === size.width && newSize.height === this.element.height && newSize.width === this.element.width) {\n        return;\n      }\n      var oldSize = Object.assign({}, size);\n      this.element.width = size.width = this.element.offsetWidth * pxRatio;\n      this.element.height = size.height = this.element.offsetHeight * pxRatio;\n      if (this.container.started) {\n        this.resizeFactor = {\n          width: size.width / oldSize.width,\n          height: size.height / oldSize.height\n        };\n      }\n    }\n  }, {\n    key: \"windowResize\",\n    value: function () {\n      var _windowResize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var container, needsRefresh;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.element) {\n                  _context.next = 2;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 2:\n                this.resize();\n                container = this.container, needsRefresh = container.updateActualOptions();\n                container.particles.setDensity();\n                this._applyResizePlugins();\n                if (!needsRefresh) {\n                  _context.next = 9;\n                  break;\n                }\n                _context.next = 9;\n                return container.refresh();\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function windowResize() {\n        return _windowResize.apply(this, arguments);\n      }\n      return windowResize;\n    }()\n  }, {\n    key: \"_applyPostDrawUpdaters\",\n    value: function _applyPostDrawUpdaters(particle) {\n      var _a;\n      var _iterator4 = _createForOfIteratorHelper(this._postDrawUpdaters),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var updater = _step4.value;\n          (_a = updater.afterDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"_applyPreDrawUpdaters\",\n    value: function _applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform) {\n      var _a;\n      var _iterator5 = _createForOfIteratorHelper(this._preDrawUpdaters),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var updater = _step5.value;\n          if (updater.getColorStyles) {\n            var _updater$getColorStyl = updater.getColorStyles(particle, ctx, radius, zOpacity),\n              fill = _updater$getColorStyl.fill,\n              stroke = _updater$getColorStyl.stroke;\n            if (fill) {\n              colorStyles.fill = fill;\n            }\n            if (stroke) {\n              colorStyles.stroke = stroke;\n            }\n          }\n          if (updater.getTransformValues) {\n            var updaterTransform = updater.getTransformValues(particle);\n            for (var key in updaterTransform) {\n              setTransformValue(transform, updaterTransform, key);\n            }\n          }\n          (_a = updater.beforeDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }, {\n    key: \"_applyResizePlugins\",\n    value: function _applyResizePlugins() {\n      var _iterator6 = _createForOfIteratorHelper(this._resizePlugins),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var plugin = _step6.value;\n          if (plugin.resize) {\n            plugin.resize();\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n  }, {\n    key: \"_getPluginParticleColors\",\n    value: function _getPluginParticleColors(particle) {\n      var fColor, sColor;\n      var _iterator7 = _createForOfIteratorHelper(this._colorPlugins),\n        _step7;\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var plugin = _step7.value;\n          if (!fColor && plugin.particleFillColor) {\n            fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n          }\n          if (!sColor && plugin.particleStrokeColor) {\n            sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n          }\n          if (fColor && sColor) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n      return [fColor, sColor];\n    }\n  }, {\n    key: \"_initCover\",\n    value: function _initCover() {\n      var options = this.container.actualOptions,\n        cover = options.backgroundMask.cover,\n        color = cover.color,\n        coverRgb = rangeColorToRgb(color);\n      if (coverRgb) {\n        var coverColor = {\n          r: coverRgb.r,\n          g: coverRgb.g,\n          b: coverRgb.b,\n          a: cover.opacity\n        };\n        this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n      }\n    }\n  }, {\n    key: \"_initStyle\",\n    value: function _initStyle() {\n      var element = this.element,\n        options = this.container.actualOptions;\n      if (!element) {\n        return;\n      }\n      if (this._fullScreen) {\n        this._originalStyle = deepExtend({}, element.style);\n        this._setFullScreenStyle();\n      } else {\n        this._resetOriginalStyle();\n      }\n      for (var key in options.style) {\n        if (!key || !options.style) {\n          continue;\n        }\n        var value = options.style[key];\n        if (!value) {\n          continue;\n        }\n        element.style.setProperty(key, value, \"important\");\n      }\n    }\n  }, {\n    key: \"_initTrail\",\n    value: function _initTrail() {\n      var options = this.container.actualOptions,\n        trail = options.particles.move.trail,\n        fillColor = rangeColorToRgb(trail.fillColor);\n      if (fillColor) {\n        var _trail = options.particles.move.trail;\n        this._trailFillColor = Object.assign(Object.assign({}, fillColor), {\n          a: 1 / _trail.length\n        });\n      }\n    }\n  }, {\n    key: \"_paintBase\",\n    value: function _paintBase(baseColor) {\n      var _this6 = this;\n      this.draw(function (ctx) {\n        paintBase(ctx, _this6.size, baseColor);\n      });\n    }\n  }, {\n    key: \"_repairStyle\",\n    value: function _repairStyle() {\n      var _a, _b;\n      var element = this.element;\n      if (!element) {\n        return;\n      }\n      (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n      this._initStyle();\n      this.initBackground();\n      (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(element, {\n        attributes: true\n      });\n    }\n  }, {\n    key: \"_resetOriginalStyle\",\n    value: function _resetOriginalStyle() {\n      var element = this.element,\n        originalStyle = this._originalStyle;\n      if (!(element && originalStyle)) {\n        return;\n      }\n      element.style.position = originalStyle.position;\n      element.style.zIndex = originalStyle.zIndex;\n      element.style.top = originalStyle.top;\n      element.style.left = originalStyle.left;\n      element.style.width = originalStyle.width;\n      element.style.height = originalStyle.height;\n    }\n  }, {\n    key: \"_setFullScreenStyle\",\n    value: function _setFullScreenStyle() {\n      var element = this.element;\n      if (!element) {\n        return;\n      }\n      var priority = \"important\";\n      element.style.setProperty(\"position\", \"fixed\", priority);\n      element.style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n      element.style.setProperty(\"top\", \"0\", priority);\n      element.style.setProperty(\"left\", \"0\", priority);\n      element.style.setProperty(\"width\", \"100%\", priority);\n      element.style.setProperty(\"height\", \"100%\", priority);\n    }\n  }]);\n  return Canvas;\n}();","map":{"version":3,"names":["clear","drawParticle","drawParticlePlugin","drawPlugin","paintBase","deepExtend","isSsr","getStyleFromHsl","getStyleFromRgb","rangeColorToHsl","rangeColorToRgb","generatedAttribute","setTransformValue","factor","newFactor","key","_a","newValue","undefined","Canvas","container","size","height","width","_context","_generated","_preDrawUpdaters","_postDrawUpdaters","_resizePlugins","_colorPlugins","_mutationObserver","MutationObserver","records","record","type","attributeName","_repairStyle","actualOptions","fullScreen","enable","options","trail","particles","move","backgroundMask","paint","length","_trailFillColor","_paintBase","draw","ctx","_b","disconnect","element","remove","_resetOriginalStyle","cb","particle","delta","spawning","destroyed","radius","getRadius","pfColor","getFillColor","psColor","getStrokeColor","_getPluginParticleColors","fColor","sColor","_c","_d","zIndexOptions","zIndex","zOpacityFactor","zIndexFactor","opacityRate","opacity","bubble","value","strokeOpacity","zOpacity","zStrokeOpacity","transform","colorStyles","fill","stroke","_applyPreDrawUpdaters","context","composite","sizeRate","shadow","_applyPostDrawUpdaters","plugin","resize","_initStyle","_initCover","_initTrail","initBackground","observe","attributes","initUpdaters","initPlugins","background","elementStyle","style","color","backgroundColor","backgroundImage","image","backgroundPosition","position","backgroundRepeat","repeat","backgroundSize","plugins","push","particleFillColor","particleStrokeColor","updaters","updater","afterDraw","getColorStyles","getTransformValues","beforeDraw","canvas","dataset","ariaHidden","_originalStyle","offsetHeight","offsetWidth","getContext","retina","init","cover","_coverColorStyle","pxRatio","pixelRatio","newSize","oldSize","Object","assign","started","resizeFactor","needsRefresh","updateActualOptions","setDensity","_applyResizePlugins","refresh","call","updaterTransform","coverRgb","coverColor","r","g","b","a","_fullScreen","_setFullScreenStyle","setProperty","fillColor","baseColor","originalStyle","top","left","priority","toString"],"sources":["C:/Users/Barbosa/Desktop/Pastas/Portifólio/portifolio/node_modules/tsparticles-engine/esm/Core/Canvas.js"],"sourcesContent":["import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase } from \"../Utils/CanvasUtils\";\nimport { deepExtend, isSsr } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    var _a;\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n        this._mutationObserver =\n            !isSsr() && typeof MutationObserver !== \"undefined\"\n                ? new MutationObserver((records) => {\n                    for (const record of records) {\n                        if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                            this._repairStyle();\n                        }\n                    }\n                })\n                : undefined;\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this._trailFillColor) {\n            this._paintBase(getStyleFromRgb(this._trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        var _a, _b;\n        (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        if (this._generated) {\n            (_b = this.element) === null || _b === void 0 ? void 0 : _b.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this.draw((ctx) => {\n            clear(ctx, this.size);\n        });\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        if (!this._context) {\n            return;\n        }\n        return cb(this._context);\n    }\n    drawParticle(particle, delta) {\n        var _a;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            var _a, _b, _c, _d;\n            const options = this.container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = (_c = (_a = particle.bubble.opacity) !== null && _a !== void 0 ? _a : (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1, strokeOpacity = (_d = particle.strokeOpacity) !== null && _d !== void 0 ? _d : opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container: this.container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            drawParticlePlugin(ctx, plugin, particle, delta);\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            drawPlugin(ctx, plugin, delta);\n        });\n    }\n    init() {\n        var _a;\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        this._initTrail();\n        this.initBackground();\n        if (this.element) {\n            (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.element, { attributes: true });\n        }\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element, elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        var _a, _b;\n        if (this._generated) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(this.element, { attributes: true });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return;\n        }\n        const oldSize = Object.assign({}, size);\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        this.resize();\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    _applyPostDrawUpdaters(particle) {\n        var _a;\n        for (const updater of this._postDrawUpdaters) {\n            (_a = updater.afterDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    _applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform) {\n        var _a;\n        for (const updater of this._preDrawUpdaters) {\n            if (updater.getColorStyles) {\n                const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                if (fill) {\n                    colorStyles.fill = fill;\n                }\n                if (stroke) {\n                    colorStyles.stroke = stroke;\n                }\n            }\n            if (updater.getTransformValues) {\n                const updaterTransform = updater.getTransformValues(particle);\n                for (const key in updaterTransform) {\n                    setTransformValue(transform, updaterTransform, key);\n                }\n            }\n            (_a = updater.beforeDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    _applyResizePlugins() {\n        for (const plugin of this._resizePlugins) {\n            if (plugin.resize) {\n                plugin.resize();\n            }\n        }\n    }\n    _getPluginParticleColors(particle) {\n        let fColor, sColor;\n        for (const plugin of this._colorPlugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    _initCover() {\n        const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n        if (coverRgb) {\n            const coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n            this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n        }\n    }\n    _initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        if (this._fullScreen) {\n            this._originalStyle = deepExtend({}, element.style);\n            this._setFullScreenStyle();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    _initTrail() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, fillColor = rangeColorToRgb(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this._trailFillColor = Object.assign(Object.assign({}, fillColor), { a: 1 / trail.length });\n        }\n    }\n    _paintBase(baseColor) {\n        this.draw((ctx) => {\n            paintBase(ctx, this.size, baseColor);\n        });\n    }\n    _repairStyle() {\n        var _a, _b;\n        const element = this.element;\n        if (!element) {\n            return;\n        }\n        (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        this._initStyle();\n        this.initBackground();\n        (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(element, { attributes: true });\n    }\n    _resetOriginalStyle() {\n        const element = this.element, originalStyle = this._originalStyle;\n        if (!(element && originalStyle)) {\n            return;\n        }\n        element.style.position = originalStyle.position;\n        element.style.zIndex = originalStyle.zIndex;\n        element.style.top = originalStyle.top;\n        element.style.left = originalStyle.left;\n        element.style.width = originalStyle.width;\n        element.style.height = originalStyle.height;\n    }\n    _setFullScreenStyle() {\n        const element = this.element;\n        if (!element) {\n            return;\n        }\n        const priority = \"important\";\n        element.style.setProperty(\"position\", \"fixed\", priority);\n        element.style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n        element.style.setProperty(\"top\", \"0\", priority);\n        element.style.setProperty(\"left\", \"0\", priority);\n        element.style.setProperty(\"width\", \"100%\", priority);\n        element.style.setProperty(\"height\", \"100%\", priority);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}