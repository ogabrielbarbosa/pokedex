{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Barbosa/Desktop/Pastas/Portif\\xF3lio/portifolio/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Barbosa/Desktop/Pastas/Portif\\xF3lio/portifolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createForOfIteratorHelper from \"C:/Users/Barbosa/Desktop/Pastas/Portif\\xF3lio/portifolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/Barbosa/Desktop/Pastas/Portif\\xF3lio/portifolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Barbosa/Desktop/Pastas/Portif\\xF3lio/portifolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { drawLinkLine as _drawLinkLine, drawLinkTriangle as _drawLinkTriangle } from \"./Utils\";\nimport { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb } from \"tsparticles-engine\";\nfunction getLinkKey(ids) {\n  ids.sort(function (a, b) {\n    return a - b;\n  });\n  return ids.join(\"_\");\n}\nfunction setLinkFrequency(particles, dictionary) {\n  var key = getLinkKey(particles.map(function (t) {\n    return t.id;\n  }));\n  var res = dictionary.get(key);\n  if (res === undefined) {\n    res = getRandom();\n    dictionary.set(key, res);\n  }\n  return res;\n}\nexport var LinkInstance = /*#__PURE__*/function () {\n  function LinkInstance(container) {\n    _classCallCheck(this, LinkInstance);\n    this.container = container;\n    this._freqs = {\n      links: new Map(),\n      triangles: new Map()\n    };\n  }\n  _createClass(LinkInstance, [{\n    key: \"drawParticle\",\n    value: function drawParticle(context, particle) {\n      var _this = this;\n      var _a;\n      var pOptions = particle.options;\n      if (!particle.links || particle.links.length <= 0) {\n        return;\n      }\n      var p1Links = particle.links.filter(function (l) {\n        return pOptions.links && _this.getLinkFrequency(particle, l.destination) <= pOptions.links.frequency;\n      });\n      var _iterator = _createForOfIteratorHelper(p1Links),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var link = _step.value;\n          this.drawTriangles(pOptions, particle, link, p1Links);\n          if (link.opacity > 0 && ((_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : 0) > 0) {\n            this.drawLinkLine(particle, link);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this._freqs.links = new Map();\n                this._freqs.triangles = new Map();\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n  }, {\n    key: \"particleCreated\",\n    value: function particleCreated(particle) {\n      particle.links = [];\n      if (!particle.options.links) {\n        return;\n      }\n      var ratio = this.container.retina.pixelRatio;\n      particle.retina.linksDistance = particle.options.links.distance * ratio;\n      particle.retina.linksWidth = particle.options.links.width * ratio;\n    }\n  }, {\n    key: \"particleDestroyed\",\n    value: function particleDestroyed(particle) {\n      particle.links = [];\n    }\n  }, {\n    key: \"drawLinkLine\",\n    value: function drawLinkLine(p1, link) {\n      var container = this.container,\n        options = container.actualOptions,\n        p2 = link.destination,\n        pos1 = p1.getPosition(),\n        pos2 = p2.getPosition();\n      var opacity = link.opacity;\n      container.canvas.draw(function (ctx) {\n        var _a, _b, _c;\n        if (!p1.options.links) {\n          return;\n        }\n        var colorLine;\n        var twinkle = (_a = p1.options.twinkle) === null || _a === void 0 ? void 0 : _a.lines;\n        if (twinkle === null || twinkle === void 0 ? void 0 : twinkle.enable) {\n          var twinkleFreq = twinkle.frequency,\n            twinkleRgb = rangeColorToRgb(twinkle.color),\n            twinkling = getRandom() < twinkleFreq;\n          if (twinkling && twinkleRgb) {\n            colorLine = twinkleRgb;\n            opacity = getRangeValue(twinkle.opacity);\n          }\n        }\n        if (!colorLine) {\n          var linksOptions = p1.options.links,\n            linkColor = (linksOptions === null || linksOptions === void 0 ? void 0 : linksOptions.id) !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n          colorLine = getLinkColor(p1, p2, linkColor);\n        }\n        if (!colorLine) {\n          return;\n        }\n        var width = (_b = p1.retina.linksWidth) !== null && _b !== void 0 ? _b : 0,\n          maxDistance = (_c = p1.retina.linksDistance) !== null && _c !== void 0 ? _c : 0;\n        _drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n      });\n    }\n  }, {\n    key: \"drawLinkTriangle\",\n    value: function drawLinkTriangle(p1, link1, link2) {\n      var _a;\n      if (!p1.options.links) {\n        return;\n      }\n      var container = this.container,\n        options = container.actualOptions,\n        p2 = link1.destination,\n        p3 = link2.destination,\n        triangleOptions = p1.options.links.triangles,\n        opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n      if (opacityTriangle <= 0) {\n        return;\n      }\n      container.canvas.draw(function (ctx) {\n        var _a;\n        var pos1 = p1.getPosition(),\n          pos2 = p2.getPosition(),\n          pos3 = p3.getPosition(),\n          linksDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : 0;\n        if (getDistance(pos1, pos2) > linksDistance || getDistance(pos3, pos2) > linksDistance || getDistance(pos3, pos1) > linksDistance) {\n          return;\n        }\n        var colorTriangle = rangeColorToRgb(triangleOptions.color);\n        if (!colorTriangle) {\n          var linksOptions = p1.options.links,\n            linkColor = (linksOptions === null || linksOptions === void 0 ? void 0 : linksOptions.id) !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n          colorTriangle = getLinkColor(p1, p2, linkColor);\n        }\n        if (!colorTriangle) {\n          return;\n        }\n        _drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n      });\n    }\n  }, {\n    key: \"drawTriangles\",\n    value: function drawTriangles(options, p1, link, p1Links) {\n      var _this2 = this;\n      var _a, _b, _c;\n      var p2 = link.destination;\n      if (!(((_a = options.links) === null || _a === void 0 ? void 0 : _a.triangles.enable) && ((_b = p2.options.links) === null || _b === void 0 ? void 0 : _b.triangles.enable))) {\n        return;\n      }\n      var vertices = (_c = p2.links) === null || _c === void 0 ? void 0 : _c.filter(function (t) {\n        var linkFreq = _this2.getLinkFrequency(p2, t.destination);\n        return p2.options.links && linkFreq <= p2.options.links.frequency && p1Links.findIndex(function (l) {\n          return l.destination === t.destination;\n        }) >= 0;\n      });\n      if (!(vertices === null || vertices === void 0 ? void 0 : vertices.length)) {\n        return;\n      }\n      var _iterator2 = _createForOfIteratorHelper(vertices),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var vertex = _step2.value;\n          var p3 = vertex.destination,\n            triangleFreq = this.getTriangleFrequency(p1, p2, p3);\n          if (triangleFreq > options.links.triangles.frequency) {\n            continue;\n          }\n          this.drawLinkTriangle(p1, link, vertex);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"getLinkFrequency\",\n    value: function getLinkFrequency(p1, p2) {\n      return setLinkFrequency([p1, p2], this._freqs.links);\n    }\n  }, {\n    key: \"getTriangleFrequency\",\n    value: function getTriangleFrequency(p1, p2, p3) {\n      return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n    }\n  }]);\n  return LinkInstance;\n}();","map":{"version":3,"names":["drawLinkLine","drawLinkTriangle","getDistance","getLinkColor","getRandom","getRangeValue","rangeColorToRgb","getLinkKey","ids","sort","a","b","join","setLinkFrequency","particles","dictionary","key","map","t","id","res","get","undefined","set","LinkInstance","container","_freqs","links","Map","triangles","context","particle","_a","pOptions","options","length","p1Links","filter","l","getLinkFrequency","destination","frequency","link","drawTriangles","opacity","retina","linksWidth","ratio","pixelRatio","linksDistance","distance","width","p1","actualOptions","p2","pos1","getPosition","pos2","canvas","draw","ctx","_b","_c","colorLine","twinkle","lines","enable","twinkleFreq","twinkleRgb","color","twinkling","linksOptions","linkColor","linksColors","linksColor","maxDistance","size","warp","backgroundMask","composite","shadow","link1","link2","p3","triangleOptions","opacityTriangle","pos3","colorTriangle","vertices","linkFreq","findIndex","vertex","triangleFreq","getTriangleFrequency"],"sources":["C:/Users/Barbosa/Desktop/Pastas/Portifólio/portifolio/node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js"],"sourcesContent":["import { drawLinkLine, drawLinkTriangle } from \"./Utils\";\nimport { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb } from \"tsparticles-engine\";\nfunction getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nfunction setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        var _a;\n        const pOptions = particle.options;\n        if (!particle.links || particle.links.length <= 0) {\n            return;\n        }\n        const p1Links = particle.links.filter((l) => pOptions.links && this.getLinkFrequency(particle, l.destination) <= pOptions.links.frequency);\n        for (const link of p1Links) {\n            this.drawTriangles(pOptions, particle, link, p1Links);\n            if (link.opacity > 0 && ((_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : 0) > 0) {\n                this.drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio;\n        particle.retina.linksDistance = particle.options.links.distance * ratio;\n        particle.retina.linksWidth = particle.options.links.width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n    drawLinkLine(p1, link) {\n        const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        let opacity = link.opacity;\n        container.canvas.draw((ctx) => {\n            var _a, _b, _c;\n            if (!p1.options.links) {\n                return;\n            }\n            let colorLine;\n            const twinkle = (_a = p1.options.twinkle) === null || _a === void 0 ? void 0 : _a.lines;\n            if (twinkle === null || twinkle === void 0 ? void 0 : twinkle.enable) {\n                const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                if (twinkling && twinkleRgb) {\n                    colorLine = twinkleRgb;\n                    opacity = getRangeValue(twinkle.opacity);\n                }\n            }\n            if (!colorLine) {\n                const linksOptions = p1.options.links, linkColor = (linksOptions === null || linksOptions === void 0 ? void 0 : linksOptions.id) !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorLine = getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorLine) {\n                return;\n            }\n            const width = (_b = p1.retina.linksWidth) !== null && _b !== void 0 ? _b : 0, maxDistance = (_c = p1.retina.linksDistance) !== null && _c !== void 0 ? _c : 0;\n            drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n        });\n    }\n    drawLinkTriangle(p1, link1, link2) {\n        var _a;\n        if (!p1.options.links) {\n            return;\n        }\n        const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, triangleOptions = p1.options.links.triangles, opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n        if (opacityTriangle <= 0) {\n            return;\n        }\n        container.canvas.draw((ctx) => {\n            var _a;\n            const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : 0;\n            if (getDistance(pos1, pos2) > linksDistance ||\n                getDistance(pos3, pos2) > linksDistance ||\n                getDistance(pos3, pos1) > linksDistance) {\n                return;\n            }\n            let colorTriangle = rangeColorToRgb(triangleOptions.color);\n            if (!colorTriangle) {\n                const linksOptions = p1.options.links, linkColor = (linksOptions === null || linksOptions === void 0 ? void 0 : linksOptions.id) !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorTriangle = getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorTriangle) {\n                return;\n            }\n            drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n        });\n    }\n    drawTriangles(options, p1, link, p1Links) {\n        var _a, _b, _c;\n        const p2 = link.destination;\n        if (!(((_a = options.links) === null || _a === void 0 ? void 0 : _a.triangles.enable) && ((_b = p2.options.links) === null || _b === void 0 ? void 0 : _b.triangles.enable))) {\n            return;\n        }\n        const vertices = (_c = p2.links) === null || _c === void 0 ? void 0 : _c.filter((t) => {\n            const linkFreq = this.getLinkFrequency(p2, t.destination);\n            return (p2.options.links &&\n                linkFreq <= p2.options.links.frequency &&\n                p1Links.findIndex((l) => l.destination === t.destination) >= 0);\n        });\n        if (!(vertices === null || vertices === void 0 ? void 0 : vertices.length)) {\n            return;\n        }\n        for (const vertex of vertices) {\n            const p3 = vertex.destination, triangleFreq = this.getTriangleFrequency(p1, p2, p3);\n            if (triangleFreq > options.links.triangles.frequency) {\n                continue;\n            }\n            this.drawLinkTriangle(p1, link, vertex);\n        }\n    }\n    getLinkFrequency(p1, p2) {\n        return setLinkFrequency([p1, p2], this._freqs.links);\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n    }\n}\n"],"mappings":";;;;;AAAA,SAASA,YAAY,IAAZA,aAAY,EAAEC,gBAAgB,IAAhBA,iBAAgB,QAAQ,SAAS;AACxD,SAASC,WAAW,EAAEC,YAAY,EAAEC,SAAS,EAAEC,aAAa,EAAEC,eAAe,QAAQ,oBAAoB;AACzG,SAASC,UAAU,CAACC,GAAG,EAAE;EACrBA,GAAG,CAACC,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;IAAA,OAAKD,CAAC,GAAGC,CAAC;EAAA,EAAC;EACzB,OAAOH,GAAG,CAACI,IAAI,CAAC,GAAG,CAAC;AACxB;AACA,SAASC,gBAAgB,CAACC,SAAS,EAAEC,UAAU,EAAE;EAC7C,IAAMC,GAAG,GAAGT,UAAU,CAACO,SAAS,CAACG,GAAG,CAAC,UAACC,CAAC;IAAA,OAAKA,CAAC,CAACC,EAAE;EAAA,EAAC,CAAC;EAClD,IAAIC,GAAG,GAAGL,UAAU,CAACM,GAAG,CAACL,GAAG,CAAC;EAC7B,IAAII,GAAG,KAAKE,SAAS,EAAE;IACnBF,GAAG,GAAGhB,SAAS,EAAE;IACjBW,UAAU,CAACQ,GAAG,CAACP,GAAG,EAAEI,GAAG,CAAC;EAC5B;EACA,OAAOA,GAAG;AACd;AACA,WAAaI,YAAY;EACrB,sBAAYC,SAAS,EAAE;IAAA;IACnB,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,MAAM,GAAG;MACVC,KAAK,EAAE,IAAIC,GAAG,EAAE;MAChBC,SAAS,EAAE,IAAID,GAAG;IACtB,CAAC;EACL;EAAC;IAAA;IAAA,OACD,sBAAaE,OAAO,EAAEC,QAAQ,EAAE;MAAA;MAC5B,IAAIC,EAAE;MACN,IAAMC,QAAQ,GAAGF,QAAQ,CAACG,OAAO;MACjC,IAAI,CAACH,QAAQ,CAACJ,KAAK,IAAII,QAAQ,CAACJ,KAAK,CAACQ,MAAM,IAAI,CAAC,EAAE;QAC/C;MACJ;MACA,IAAMC,OAAO,GAAGL,QAAQ,CAACJ,KAAK,CAACU,MAAM,CAAC,UAACC,CAAC;QAAA,OAAKL,QAAQ,CAACN,KAAK,IAAI,KAAI,CAACY,gBAAgB,CAACR,QAAQ,EAAEO,CAAC,CAACE,WAAW,CAAC,IAAIP,QAAQ,CAACN,KAAK,CAACc,SAAS;MAAA,EAAC;MAAC,2CACxHL,OAAO;QAAA;MAAA;QAA1B,oDAA4B;UAAA,IAAjBM,IAAI;UACX,IAAI,CAACC,aAAa,CAACV,QAAQ,EAAEF,QAAQ,EAAEW,IAAI,EAAEN,OAAO,CAAC;UACrD,IAAIM,IAAI,CAACE,OAAO,GAAG,CAAC,IAAI,CAAC,CAACZ,EAAE,GAAGD,QAAQ,CAACc,MAAM,CAACC,UAAU,MAAM,IAAI,IAAId,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE;YAChG,IAAI,CAAChC,YAAY,CAAC+B,QAAQ,EAAEW,IAAI,CAAC;UACrC;QACJ;MAAC;QAAA;MAAA;QAAA;MAAA;IACL;EAAC;IAAA;IAAA;MAAA,uEACD;QAAA;UAAA;YAAA;cAAA;gBACI,IAAI,CAAChB,MAAM,CAACC,KAAK,GAAG,IAAIC,GAAG,EAAE;gBAC7B,IAAI,CAACF,MAAM,CAACG,SAAS,GAAG,IAAID,GAAG,EAAE;cAAC;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CACrC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA,OACD,yBAAgBG,QAAQ,EAAE;MACtBA,QAAQ,CAACJ,KAAK,GAAG,EAAE;MACnB,IAAI,CAACI,QAAQ,CAACG,OAAO,CAACP,KAAK,EAAE;QACzB;MACJ;MACA,IAAMoB,KAAK,GAAG,IAAI,CAACtB,SAAS,CAACoB,MAAM,CAACG,UAAU;MAC9CjB,QAAQ,CAACc,MAAM,CAACI,aAAa,GAAGlB,QAAQ,CAACG,OAAO,CAACP,KAAK,CAACuB,QAAQ,GAAGH,KAAK;MACvEhB,QAAQ,CAACc,MAAM,CAACC,UAAU,GAAGf,QAAQ,CAACG,OAAO,CAACP,KAAK,CAACwB,KAAK,GAAGJ,KAAK;IACrE;EAAC;IAAA;IAAA,OACD,2BAAkBhB,QAAQ,EAAE;MACxBA,QAAQ,CAACJ,KAAK,GAAG,EAAE;IACvB;EAAC;IAAA;IAAA,OACD,sBAAayB,EAAE,EAAEV,IAAI,EAAE;MACnB,IAAMjB,SAAS,GAAG,IAAI,CAACA,SAAS;QAAES,OAAO,GAAGT,SAAS,CAAC4B,aAAa;QAAEC,EAAE,GAAGZ,IAAI,CAACF,WAAW;QAAEe,IAAI,GAAGH,EAAE,CAACI,WAAW,EAAE;QAAEC,IAAI,GAAGH,EAAE,CAACE,WAAW,EAAE;MAC5I,IAAIZ,OAAO,GAAGF,IAAI,CAACE,OAAO;MAC1BnB,SAAS,CAACiC,MAAM,CAACC,IAAI,CAAC,UAACC,GAAG,EAAK;QAC3B,IAAI5B,EAAE,EAAE6B,EAAE,EAAEC,EAAE;QACd,IAAI,CAACV,EAAE,CAAClB,OAAO,CAACP,KAAK,EAAE;UACnB;QACJ;QACA,IAAIoC,SAAS;QACb,IAAMC,OAAO,GAAG,CAAChC,EAAE,GAAGoB,EAAE,CAAClB,OAAO,CAAC8B,OAAO,MAAM,IAAI,IAAIhC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACiC,KAAK;QACvF,IAAID,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACE,MAAM,EAAE;UAClE,IAAMC,WAAW,GAAGH,OAAO,CAACvB,SAAS;YAAE2B,UAAU,GAAG9D,eAAe,CAAC0D,OAAO,CAACK,KAAK,CAAC;YAAEC,SAAS,GAAGlE,SAAS,EAAE,GAAG+D,WAAW;UACzH,IAAIG,SAAS,IAAIF,UAAU,EAAE;YACzBL,SAAS,GAAGK,UAAU;YACtBxB,OAAO,GAAGvC,aAAa,CAAC2D,OAAO,CAACpB,OAAO,CAAC;UAC5C;QACJ;QACA,IAAI,CAACmB,SAAS,EAAE;UACZ,IAAMQ,YAAY,GAAGnB,EAAE,CAAClB,OAAO,CAACP,KAAK;YAAE6C,SAAS,GAAG,CAACD,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACpD,EAAE,MAAMG,SAAS,GACxIG,SAAS,CAACX,SAAS,CAAC2D,WAAW,CAACpD,GAAG,CAACkD,YAAY,CAACpD,EAAE,CAAC,GACpDM,SAAS,CAACX,SAAS,CAAC4D,UAAU;UACpCX,SAAS,GAAG5D,YAAY,CAACiD,EAAE,EAAEE,EAAE,EAAEkB,SAAS,CAAC;QAC/C;QACA,IAAI,CAACT,SAAS,EAAE;UACZ;QACJ;QACA,IAAMZ,KAAK,GAAG,CAACU,EAAE,GAAGT,EAAE,CAACP,MAAM,CAACC,UAAU,MAAM,IAAI,IAAIe,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC;UAAEc,WAAW,GAAG,CAACb,EAAE,GAAGV,EAAE,CAACP,MAAM,CAACI,aAAa,MAAM,IAAI,IAAIa,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC;QAC7J9D,aAAY,CAAC4D,GAAG,EAAET,KAAK,EAAEI,IAAI,EAAEE,IAAI,EAAEkB,WAAW,EAAElD,SAAS,CAACiC,MAAM,CAACkB,IAAI,EAAExB,EAAE,CAAClB,OAAO,CAACP,KAAK,CAACkD,IAAI,EAAE3C,OAAO,CAAC4C,cAAc,CAACZ,MAAM,EAAEhC,OAAO,CAAC4C,cAAc,CAACC,SAAS,EAAEhB,SAAS,EAAEnB,OAAO,EAAEQ,EAAE,CAAClB,OAAO,CAACP,KAAK,CAACqD,MAAM,CAAC;MACjN,CAAC,CAAC;IACN;EAAC;IAAA;IAAA,OACD,0BAAiB5B,EAAE,EAAE6B,KAAK,EAAEC,KAAK,EAAE;MAC/B,IAAIlD,EAAE;MACN,IAAI,CAACoB,EAAE,CAAClB,OAAO,CAACP,KAAK,EAAE;QACnB;MACJ;MACA,IAAMF,SAAS,GAAG,IAAI,CAACA,SAAS;QAAES,OAAO,GAAGT,SAAS,CAAC4B,aAAa;QAAEC,EAAE,GAAG2B,KAAK,CAACzC,WAAW;QAAE2C,EAAE,GAAGD,KAAK,CAAC1C,WAAW;QAAE4C,eAAe,GAAGhC,EAAE,CAAClB,OAAO,CAACP,KAAK,CAACE,SAAS;QAAEwD,eAAe,GAAG,CAACrD,EAAE,GAAGoD,eAAe,CAACxC,OAAO,MAAM,IAAI,IAAIZ,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAACiD,KAAK,CAACrC,OAAO,GAAGsC,KAAK,CAACtC,OAAO,IAAI,CAAC;MACxR,IAAIyC,eAAe,IAAI,CAAC,EAAE;QACtB;MACJ;MACA5D,SAAS,CAACiC,MAAM,CAACC,IAAI,CAAC,UAACC,GAAG,EAAK;QAC3B,IAAI5B,EAAE;QACN,IAAMuB,IAAI,GAAGH,EAAE,CAACI,WAAW,EAAE;UAAEC,IAAI,GAAGH,EAAE,CAACE,WAAW,EAAE;UAAE8B,IAAI,GAAGH,EAAE,CAAC3B,WAAW,EAAE;UAAEP,aAAa,GAAG,CAACjB,EAAE,GAAGoB,EAAE,CAACP,MAAM,CAACI,aAAa,MAAM,IAAI,IAAIjB,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC;QAClK,IAAI9B,WAAW,CAACqD,IAAI,EAAEE,IAAI,CAAC,GAAGR,aAAa,IACvC/C,WAAW,CAACoF,IAAI,EAAE7B,IAAI,CAAC,GAAGR,aAAa,IACvC/C,WAAW,CAACoF,IAAI,EAAE/B,IAAI,CAAC,GAAGN,aAAa,EAAE;UACzC;QACJ;QACA,IAAIsC,aAAa,GAAGjF,eAAe,CAAC8E,eAAe,CAACf,KAAK,CAAC;QAC1D,IAAI,CAACkB,aAAa,EAAE;UAChB,IAAMhB,YAAY,GAAGnB,EAAE,CAAClB,OAAO,CAACP,KAAK;YAAE6C,SAAS,GAAG,CAACD,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACpD,EAAE,MAAMG,SAAS,GACxIG,SAAS,CAACX,SAAS,CAAC2D,WAAW,CAACpD,GAAG,CAACkD,YAAY,CAACpD,EAAE,CAAC,GACpDM,SAAS,CAACX,SAAS,CAAC4D,UAAU;UACpCa,aAAa,GAAGpF,YAAY,CAACiD,EAAE,EAAEE,EAAE,EAAEkB,SAAS,CAAC;QACnD;QACA,IAAI,CAACe,aAAa,EAAE;UAChB;QACJ;QACAtF,iBAAgB,CAAC2D,GAAG,EAAEL,IAAI,EAAEE,IAAI,EAAE6B,IAAI,EAAEpD,OAAO,CAAC4C,cAAc,CAACZ,MAAM,EAAEhC,OAAO,CAAC4C,cAAc,CAACC,SAAS,EAAEQ,aAAa,EAAEF,eAAe,CAAC;MAC5I,CAAC,CAAC;IACN;EAAC;IAAA;IAAA,OACD,uBAAcnD,OAAO,EAAEkB,EAAE,EAAEV,IAAI,EAAEN,OAAO,EAAE;MAAA;MACtC,IAAIJ,EAAE,EAAE6B,EAAE,EAAEC,EAAE;MACd,IAAMR,EAAE,GAAGZ,IAAI,CAACF,WAAW;MAC3B,IAAI,EAAE,CAAC,CAACR,EAAE,GAAGE,OAAO,CAACP,KAAK,MAAM,IAAI,IAAIK,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACH,SAAS,CAACqC,MAAM,MAAM,CAACL,EAAE,GAAGP,EAAE,CAACpB,OAAO,CAACP,KAAK,MAAM,IAAI,IAAIkC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAChC,SAAS,CAACqC,MAAM,CAAC,CAAC,EAAE;QAC1K;MACJ;MACA,IAAMsB,QAAQ,GAAG,CAAC1B,EAAE,GAAGR,EAAE,CAAC3B,KAAK,MAAM,IAAI,IAAImC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACzB,MAAM,CAAC,UAACnB,CAAC,EAAK;QACnF,IAAMuE,QAAQ,GAAG,MAAI,CAAClD,gBAAgB,CAACe,EAAE,EAAEpC,CAAC,CAACsB,WAAW,CAAC;QACzD,OAAQc,EAAE,CAACpB,OAAO,CAACP,KAAK,IACpB8D,QAAQ,IAAInC,EAAE,CAACpB,OAAO,CAACP,KAAK,CAACc,SAAS,IACtCL,OAAO,CAACsD,SAAS,CAAC,UAACpD,CAAC;UAAA,OAAKA,CAAC,CAACE,WAAW,KAAKtB,CAAC,CAACsB,WAAW;QAAA,EAAC,IAAI,CAAC;MACtE,CAAC,CAAC;MACF,IAAI,EAAEgD,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACrD,MAAM,CAAC,EAAE;QACxE;MACJ;MAAC,4CACoBqD,QAAQ;QAAA;MAAA;QAA7B,uDAA+B;UAAA,IAApBG,MAAM;UACb,IAAMR,EAAE,GAAGQ,MAAM,CAACnD,WAAW;YAAEoD,YAAY,GAAG,IAAI,CAACC,oBAAoB,CAACzC,EAAE,EAAEE,EAAE,EAAE6B,EAAE,CAAC;UACnF,IAAIS,YAAY,GAAG1D,OAAO,CAACP,KAAK,CAACE,SAAS,CAACY,SAAS,EAAE;YAClD;UACJ;UACA,IAAI,CAACxC,gBAAgB,CAACmD,EAAE,EAAEV,IAAI,EAAEiD,MAAM,CAAC;QAC3C;MAAC;QAAA;MAAA;QAAA;MAAA;IACL;EAAC;IAAA;IAAA,OACD,0BAAiBvC,EAAE,EAAEE,EAAE,EAAE;MACrB,OAAOzC,gBAAgB,CAAC,CAACuC,EAAE,EAAEE,EAAE,CAAC,EAAE,IAAI,CAAC5B,MAAM,CAACC,KAAK,CAAC;IACxD;EAAC;IAAA;IAAA,OACD,8BAAqByB,EAAE,EAAEE,EAAE,EAAE6B,EAAE,EAAE;MAC7B,OAAOtE,gBAAgB,CAAC,CAACuC,EAAE,EAAEE,EAAE,EAAE6B,EAAE,CAAC,EAAE,IAAI,CAACzD,MAAM,CAACG,SAAS,CAAC;IAChE;EAAC;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}